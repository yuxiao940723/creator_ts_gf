// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform UNIFORM_INFO {
    vec2 texCenter;
    vec2 lightOffset;
    float raidus;
    float lightLength;
    float light;
  };

  void main () {
    vec4 o = v_color;

    o.a *= smoothstep(raidus, raidus*0.95, length(v_uv0-texCenter));

    float l = 1.0+mix(1.0, 0.0, length(v_uv0-texCenter+lightOffset)/lightLength)*light;
    o *= l;

    vec2 area = floor(v_uv0*100.0);
    area = area - floor(area/2.0)*2.0;

    if (area.x == area.y) {
      o.rgb *= 0.9;
    }

    gl_FragColor = o;
  }
}%
