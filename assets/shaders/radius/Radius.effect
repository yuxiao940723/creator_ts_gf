// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform UNIFORM_INFO {
    vec2 texCenter;
    float halfTexLength;
    float round;
    float perPixelInUV;
  };

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
      CCTexture(texture, v_uv0, o);
    #endif

    float n = perPixelInUV;
    vec2 p1 = abs(v_uv0 - texCenter);
    vec2 p2 = vec2(halfTexLength-round);
    vec2 a1 = step(p2, p1);
    float a = a1.x * a1.y;
    float l = length(p1-p2);

    a *= smoothstep(round-n, round, length(p1-p2)-n/2.0);

    // if (round <= n*4.0) {
    //   a *= smoothstep(round-n, round, length(p1-p2)-n/2.0);
    // } else {
    //   a *= smoothstep(round-n, round, l);
    //   a *= smoothstep(round- max(min(n, halfTexLength-max(p1.x, p1.y)), 0.0), round, l);
    // }



    o.a *= (1.0 - a);

    // o.a = step(0.01, o.a);

    o *= v_color;

    

    // gl_FragColor = vec4(1, 1, 0, 1);

    gl_FragColor = o;
  }
}%
